#!/usr/bin/env python

''' 
    Purpose: Dynamic Reconfigure for Transform Calibration
    Subscribed topics: None
    Pulished topic: None

    Project: WATonoBus
    Author: Neel Bhatt
    Date: Feb 26, 2022
    Do not share, copy, or use without seeking permission from the author
'''

PACKAGE = "transform_publisher"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("roll_alpha",    double_t,    0, "Roll (alpha) in deg", 0.0, -180.0, 180.0)
gen.add("pitch_beta",    double_t,    0, "Pitch (beta) in deg", 0.0, -180.0, 180.0)
gen.add("yaw_gamma",    double_t,    0, "Yaw (gamma) in deg", 0.0, -180.0, 180.0)

gen.add("translation_x",    double_t,    0, "Translation along x in m", 0.0, -20.0, 20.0)
gen.add("translation_y",    double_t,    0, "Translation along y in m", 0.0, -20.0, 20.0)
gen.add("translation_z",    double_t,    0, "Translation along z in m", 0.0, -20.0, 20.0)
gen.add("save_transform",   bool_t,   0, "A Boolean parameter",  False)

# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                        gen.const("Medium",     int_t, 1, "A medium constant"),
#                        gen.const("Large",      int_t, 2, "A large constant"),
#                        gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                      "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "transform_publisher", "calib_robosense"))